#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        mouseMove: mouseMove {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSEMOVE";
            bindings = <&mmv>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <6 19 35 21>;
        };

        mouseClick: mouseClick {
            compatible = "zmk,behavior-hold-tap";
            label = "MOUSECLICK";
            bindings = <&mkp>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            hold-trigger-key-positions = <20>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        combo_Slash {
            bindings = <&kp SLASH>;
            key-positions = <24 10>;
            layers = <0>;
        };

        combo_Backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <24 39>;
            layers = <0>;
        };

        combo_Qutoes {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <7 8>;
            layers = <0>;
        };

        combo_exclamation {
            bindings = <&kp EXCLAMATION>;
            key-positions = <23 8>;
        };

        combo_at {
            bindings = <&kp AT>;
            key-positions = <1 45>;
        };

        combo_Dollar {
            bindings = <&kp DLLR>;
            key-positions = <2 45>;
        };

        combo_caret {
            bindings = <&kp CARET>;
            key-positions = <45 0>;
        };

        GamingLayer {
            bindings = <&gaming_toggleRgb>;
            key-positions = <45 47 46>;
            layers = <0 2 1 3>;
        };

        question {
            bindings = <&kp QUESTION>;
            key-positions = <25 26>;
        };

        windows {
            bindings = <&kp LEFT_WIN>;
            key-positions = <45 46>;
        };

        default_laout {
            bindings = <&defaul_toggleRgb>;
            key-positions = <46 47 45>;
            layers = <4>;
        };
    };

    macros {
        gaming_toggleRgb: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 4 &rgb_ug RGB_TOG>;
            label = "NEW_MACRO";
        };

        defaul_toggleRgb: defaul_toggleRgb {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &rgb_ug RGB_TOG>;
            label = "DEFAUL_TOGGLERGB";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB  &kp Q  &kp W  &kp E      &kp R      &kp T                                       &mmv MOVE_UP                            &kp Y        &kp U  &kp I      &kp O    &kp P      &kp BACKSPACE
&kp ESC  &kp A  &kp S  &kp D      &kp F      &kp G                       &mmv MOVE_LEFT  &mouseClick RCLK LCLK  &mmv MOVE_RIGHT  &kp H        &kp J  &kp K      &kp L    &kp SEMI   &mt INS EQUAL
&td0     &kp Z  &kp X  &kp C      &kp V      &kp B         &kp C_MUTE                    &mmv MOVE_DOWN                          &kp N        &kp M  &kp COMMA  &kp DOT  &kp MINUS  &kp LSHFT
                       &kp LCTRL  &kp SPACE  &kp LEFT_ALT                                                                        &lt 1 ENTER  &mo 2  &mo 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&none                            &kp N1           &kp N2          &kp N3        &kp N4        &kp N5                                         &mmv MOVE_UP                     &kp N6           &kp N7           &kp N8                            &kp N9           &kp N0    &kp DELETE
&bt BT_CLR                       &bt BT_CLR_ALL   &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3                   &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT         &kp DOWN         &kp UP                            &kp RIGHT        &kp HOME  &kp PG_UP
&rgb_ug RGB_COLOR_HSB(92,73,48)  &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &bt BT_SEL 4  &none         &rgb_ug RGB_EFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_BRI                   &rgb_ug RGB_BRD  &kp END   &kp PG_DN
                                                                  &none         &none         &none                                                                           &none            &kp DEL          &rgb_ug RGB_COLOR_HSB(188,94,48)
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &kp EXCL      &kp AT        &kp HASH   &kp DLLR   &kp PRCNT                           &mmv MOVE_UP                     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&none  &bt BT_CLR    &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&none  &out OUT_USB  &out OUT_BLE  &none      &none      &mkp MB5   &none                    &mmv MOVE_DOWN                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                   &none      &none      &kp SPACE                                                            &kp RET    &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&studio_unlock  &kp F1      &kp F2     &kp F3       &kp F4     &kp F5                                  &mmv MOVE_UP                     &kp F6       &kp F7     &kp F8       &kp F9      &kp F10          &kp F11
&none           &none       &mkp LCLK  &mkp MCLK    &mkp RCLK  &mkp MB4                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &bootloader  &mkp LCLK  &mkp MCLK    &mkp RCLK   &kp PRINTSCREEN  &kp F12
&none           &sys_reset  &none      &bootloader  &none      &mkp MB5  &kp C_MUTE                    &mmv MOVE_DOWN                   &none        &none      &bootloader  &sys_reset  &kp SCROLLLOCK   &kp PAUSE_BREAK
                                       &none        &none      &none                                                                    &none        &none      &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        Gaming {
            bindings = <
&kp ESC    &kp N1  &kp N2  &kp N4     &kp N5    &kp N6                             &none         &none      &none  &none  &none  &none  &none
&kp TAB    &kp Q   &kp W   &kp E      &kp R     &kp T                       &none  &none  &none  &none      &none  &none  &none  &none  &none
&kp LSHFT  &kp A   &kp S   &kp D      &kp F     &kp G      &mt ENTER INS           &none         &none      &none  &none  &none  &none  &none
                           &kp LCTRL  &kp LALT  &kp SPACE                                        &kp ENTER  &none  &none
            >;

            label = "Gaming";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
